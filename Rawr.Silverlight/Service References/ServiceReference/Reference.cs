//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rawr.Silverlight.ServiceReference {
    
    
    [System.ServiceModel.ServiceContractAttribute()]
    public interface IRawrService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRawrService/GetSupportedModels", ReplyAction="http://tempuri.org/IRawrService/GetSupportedModelsResponse")]
        System.IAsyncResult BeginGetSupportedModels(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetSupportedModels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRawrService/GetCharacterDisplayCalculationValues", ReplyAction="http://tempuri.org/IRawrService/GetCharacterDisplayCalculationValuesResponse")]
        System.IAsyncResult BeginGetCharacterDisplayCalculationValues(string character, string model, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndGetCharacterDisplayCalculationValues(System.IAsyncResult result);
    }
    
    public interface IRawrServiceChannel : Rawr.Silverlight.ServiceReference.IRawrService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetSupportedModelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSupportedModelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetCharacterDisplayCalculationValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCharacterDisplayCalculationValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class RawrServiceClient : System.ServiceModel.ClientBase<Rawr.Silverlight.ServiceReference.IRawrService>, Rawr.Silverlight.ServiceReference.IRawrService {
        
        private BeginOperationDelegate onBeginGetSupportedModelsDelegate;
        
        private EndOperationDelegate onEndGetSupportedModelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSupportedModelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCharacterDisplayCalculationValuesDelegate;
        
        private EndOperationDelegate onEndGetCharacterDisplayCalculationValuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCharacterDisplayCalculationValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RawrServiceClient() {
        }
        
        public RawrServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RawrServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RawrServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RawrServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetSupportedModelsCompletedEventArgs> GetSupportedModelsCompleted;
        
        public event System.EventHandler<GetCharacterDisplayCalculationValuesCompletedEventArgs> GetCharacterDisplayCalculationValuesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        System.IAsyncResult Rawr.Silverlight.ServiceReference.IRawrService.BeginGetSupportedModels(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSupportedModels(callback, asyncState);
        }
        
        System.Collections.ObjectModel.ObservableCollection<string> Rawr.Silverlight.ServiceReference.IRawrService.EndGetSupportedModels(System.IAsyncResult result) {
            return base.Channel.EndGetSupportedModels(result);
        }
        
        private System.IAsyncResult OnBeginGetSupportedModels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Rawr.Silverlight.ServiceReference.IRawrService)(this)).BeginGetSupportedModels(callback, asyncState);
        }
        
        private object[] OnEndGetSupportedModels(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((Rawr.Silverlight.ServiceReference.IRawrService)(this)).EndGetSupportedModels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSupportedModelsCompleted(object state) {
            if ((this.GetSupportedModelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSupportedModelsCompleted(this, new GetSupportedModelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSupportedModelsAsync() {
            this.GetSupportedModelsAsync(null);
        }
        
        public void GetSupportedModelsAsync(object userState) {
            if ((this.onBeginGetSupportedModelsDelegate == null)) {
                this.onBeginGetSupportedModelsDelegate = new BeginOperationDelegate(this.OnBeginGetSupportedModels);
            }
            if ((this.onEndGetSupportedModelsDelegate == null)) {
                this.onEndGetSupportedModelsDelegate = new EndOperationDelegate(this.OnEndGetSupportedModels);
            }
            if ((this.onGetSupportedModelsCompletedDelegate == null)) {
                this.onGetSupportedModelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSupportedModelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSupportedModelsDelegate, null, this.onEndGetSupportedModelsDelegate, this.onGetSupportedModelsCompletedDelegate, userState);
        }
        
        System.IAsyncResult Rawr.Silverlight.ServiceReference.IRawrService.BeginGetCharacterDisplayCalculationValues(string character, string model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCharacterDisplayCalculationValues(character, model, callback, asyncState);
        }
        
        System.Collections.Generic.Dictionary<string, string> Rawr.Silverlight.ServiceReference.IRawrService.EndGetCharacterDisplayCalculationValues(System.IAsyncResult result) {
            return base.Channel.EndGetCharacterDisplayCalculationValues(result);
        }
        
        private System.IAsyncResult OnBeginGetCharacterDisplayCalculationValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string character = ((string)(inValues[0]));
            string model = ((string)(inValues[1]));
            return ((Rawr.Silverlight.ServiceReference.IRawrService)(this)).BeginGetCharacterDisplayCalculationValues(character, model, callback, asyncState);
        }
        
        private object[] OnEndGetCharacterDisplayCalculationValues(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Rawr.Silverlight.ServiceReference.IRawrService)(this)).EndGetCharacterDisplayCalculationValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCharacterDisplayCalculationValuesCompleted(object state) {
            if ((this.GetCharacterDisplayCalculationValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCharacterDisplayCalculationValuesCompleted(this, new GetCharacterDisplayCalculationValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCharacterDisplayCalculationValuesAsync(string character, string model) {
            this.GetCharacterDisplayCalculationValuesAsync(character, model, null);
        }
        
        public void GetCharacterDisplayCalculationValuesAsync(string character, string model, object userState) {
            if ((this.onBeginGetCharacterDisplayCalculationValuesDelegate == null)) {
                this.onBeginGetCharacterDisplayCalculationValuesDelegate = new BeginOperationDelegate(this.OnBeginGetCharacterDisplayCalculationValues);
            }
            if ((this.onEndGetCharacterDisplayCalculationValuesDelegate == null)) {
                this.onEndGetCharacterDisplayCalculationValuesDelegate = new EndOperationDelegate(this.OnEndGetCharacterDisplayCalculationValues);
            }
            if ((this.onGetCharacterDisplayCalculationValuesCompletedDelegate == null)) {
                this.onGetCharacterDisplayCalculationValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCharacterDisplayCalculationValuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCharacterDisplayCalculationValuesDelegate, new object[] {
                        character,
                        model}, this.onEndGetCharacterDisplayCalculationValuesDelegate, this.onGetCharacterDisplayCalculationValuesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Rawr.Silverlight.ServiceReference.IRawrService CreateChannel() {
            return new RawrServiceClientChannel(this);
        }
        
        private class RawrServiceClientChannel : ChannelBase<Rawr.Silverlight.ServiceReference.IRawrService>, Rawr.Silverlight.ServiceReference.IRawrService {
            
            public RawrServiceClientChannel(System.ServiceModel.ClientBase<Rawr.Silverlight.ServiceReference.IRawrService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSupportedModels(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSupportedModels", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetSupportedModels(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetSupportedModels", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCharacterDisplayCalculationValues(string character, string model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = character;
                _args[1] = model;
                System.IAsyncResult _result = base.BeginInvoke("GetCharacterDisplayCalculationValues", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndGetCharacterDisplayCalculationValues(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("GetCharacterDisplayCalculationValues", _args, result)));
                return _result;
            }
        }
    }
}
